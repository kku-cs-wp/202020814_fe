package kr.ac.kku.cs.wp.wsd.user.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.*;

import kr.ac.kku.cs.wp.wsd.model.Board;
import kr.ac.kku.cs.wp.wsd.service.BoardService;

@Controller
public class BoardController {

    private final BoardService boardService;

    @Autowired
    public BoardController(BoardService boardService) {
        this.boardService = boardService;
    }

    // 게시글 목록
    @GetMapping("board")
    public String listBoards(Model model) {
        model.addAttribute("boards", boardService.getAllBoards()); // 서비스 호출
        return "BoardList"; // boardList.jsp 렌더링
    }

    // 게시글 작성 폼
    @GetMapping("boards/new")
    public String showCreateForm() {
        return "BoardForm"; // boardForm.jsp 렌더링
    }

    // 게시글 추가
    @PostMapping("board")
    public String createBoard(@RequestParam("title") String title, @RequestParam("content") String content) {
        boardService.createBoard(title, content); // 서비스 호출
        return "redirect:/board";
    }

    // 특정 게시글 조회 (옵션)
    @GetMapping("board/{id}")
    public String getBoardById(@PathVariable("id") int id, Model model) {
        Board board = boardService.getBoardById(id);
        if (board != null) {
            model.addAttribute("board", board);
            return "BoardDetail"; // 특정 게시글의 상세 정보를 렌더링
        } else {
            return "redirect:/board"; // 존재하지 않는 게시글 처리
        }
    }

    // 게시글 수정 폼
    @GetMapping("board/{id}/edit")
    public String showEditForm(@PathVariable("id") int id, Model model) {
        Board board = boardService.getBoardById(id);
        if (board != null) {
            model.addAttribute("board", board);
            return "EditBoardForm"; // 수정 폼 렌더링
        } else {
            return "redirect:/board";
        }
    }

    // 게시글 수정
    @PostMapping("board/{id}/edit")
    public String updateBoard(@PathVariable("id") int id,
                              @RequestParam("title") String title,
                              @RequestParam("content") String content) {
        boardService.updateBoard(id, title, content); // 서비스 호출
        return "redirect:/board";
    }

    // 게시글 삭제
    @PostMapping("board/{id}/delete")
    public String deleteBoard(@PathVariable("id") int id) {
        boardService.deleteBoard(id); // 서비스 호출
        return "redirect:/board";
    }
}
